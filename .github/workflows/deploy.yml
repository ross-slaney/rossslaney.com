name: Deploy to Azure Container Apps

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  AZURE_RESOURCE_GROUP: FOUNDATION
  AZURE_LOCATION: centralus

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Create Resource Group
        run: |
          az group create \
            --name ${{ env.AZURE_RESOURCE_GROUP }} \
            --location ${{ env.AZURE_LOCATION }}

      - name: Deploy Infrastructure
        id: deploy-infra
        run: |
          # Deploy the Bicep template
          deployment_output=$(az deployment group create \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
            --template-file infra/main.bicep \
            --parameters infra/main.parameters.json \
            --parameters domainName=${{ secrets.AZURE_DNSZONE_DOMAINNAME }} \
            --query 'properties.outputs' \
            --output json)

          # Extract outputs and set as environment variables
          echo "ACR_LOGIN_SERVER=$(echo $deployment_output | jq -r '.acrLoginServer.value')" >> $GITHUB_ENV
          echo "ACR_NAME=$(echo $deployment_output | jq -r '.acrName.value')" >> $GITHUB_ENV
          echo "CONTAINER_APP_NAME=$(echo $deployment_output | jq -r '.containerAppName.value')" >> $GITHUB_ENV
          echo "CONTAINER_APP_FQDN=$(echo $deployment_output | jq -r '.containerAppFqdn.value')" >> $GITHUB_ENV

      - name: Build and Push Docker Image
        run: |
          # Login to ACR
          az acr login --name ${{ env.ACR_NAME }}

          # Build and tag the image
          docker build -t ${{ env.ACR_LOGIN_SERVER }}/rossslaney-app:${{ github.sha }} .
          docker build -t ${{ env.ACR_LOGIN_SERVER }}/rossslaney-app:latest .

          # Push the image
          docker push ${{ env.ACR_LOGIN_SERVER }}/rossslaney-app:${{ github.sha }}
          docker push ${{ env.ACR_LOGIN_SERVER }}/rossslaney-app:latest

      - name: Configure DNS and Custom Domain
        run: |
          echo "🌐 Configuring DNS and custom domain for ${{ secrets.AZURE_DNSZONE_DOMAINNAME }}"

          # Delete existing CNAME record if it exists (ignore errors)
          az network dns record-set cname delete \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
            --zone-name ${{ secrets.AZURE_DNSZONE_DOMAINNAME }} \
            --name "@" \
            --yes 2>/dev/null || echo "No existing CNAME record to delete"

          # Create new CNAME record
          az network dns record-set cname set-record \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
            --zone-name ${{ secrets.AZURE_DNSZONE_DOMAINNAME }} \
            --record-set-name "@" \
            --cname ${{ env.CONTAINER_APP_FQDN }} \
            --ttl 300

          echo "✅ CNAME record created: ${{ secrets.AZURE_DNSZONE_DOMAINNAME }} -> ${{ env.CONTAINER_APP_FQDN }}"

          # Add custom domain to container app (this will auto-provision SSL)
          az containerapp hostname add \
            --hostname ${{ secrets.AZURE_DNSZONE_DOMAINNAME }} \
            --name ${{ env.CONTAINER_APP_NAME }} \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }}

          echo "✅ Custom domain added with automatic SSL certificate"

      - name: Update Container App
        run: |
          # Update the container app with the new image
          az containerapp update \
            --name ${{ env.CONTAINER_APP_NAME }} \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
            --image ${{ env.ACR_LOGIN_SERVER }}/rossslaney-app:${{ github.sha }}

      - name: Deployment Summary
        run: |
          echo "✅ Deployment completed successfully!"
          echo "🚀 Application URL: https://${{ secrets.AZURE_DNSZONE_DOMAINNAME }}"
          echo "🌐 DNS automatically configured via GitHub workflow"
          echo "🐳 Container App FQDN: ${{ env.CONTAINER_APP_FQDN }}"
          echo "📦 ACR: ${{ env.ACR_LOGIN_SERVER }}"
          echo "🗂️ Resource Group: ${{ env.AZURE_RESOURCE_GROUP }}"
          echo ""
          echo "🎉 Your app is now live with custom domain and SSL!"
          echo "🔒 Managed SSL certificate automatically provisioned by Azure"
          echo "🔄 DNS propagation may take a few minutes"
