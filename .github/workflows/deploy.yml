name: Deploy to Azure Container Apps

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  AZURE_RESOURCE_GROUP: FOUNDATION
  AZURE_LOCATION: centralus
  PROJECT_PREFIX: ross

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Create Resource Group
        run: |
          az group create \
            --name ${{ env.AZURE_RESOURCE_GROUP }} \
            --location ${{ env.AZURE_LOCATION }}

      - name: Layer 1 ‚Äî Deploy Foundation (ACR, Container Apps Env, Storage)
        run: |
          az deployment group create \
            --debug \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
            --name foundation \
            --template-file infra/layers/foundation.bicep \
            --parameters infra/layers/parameters-foundation.json \
            --parameters location=${{ env.AZURE_LOCATION }} \
            --parameters projectPrefix=${{ env.PROJECT_PREFIX }}

        # Extract foundation outputs
        export ACR_NAME="$(az deployment group show --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --name foundation --query properties.outputs.acrName.value --output tsv)"
        export ACR_LOGIN_SERVER="$(az deployment group show --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --name foundation --query properties.outputs.acrLoginServer.value --output tsv)"
        export CONTAINER_APPS_ENV_ID="$(az deployment group show --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --name foundation --query properties.outputs.containerAppsEnvId.value --output tsv)"
        export UAMI_ID="$(az deployment group show --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --name foundation --query properties.outputs.uamiId.value --output tsv)"
        
        echo "ACR_NAME=$ACR_NAME" >> $GITHUB_ENV
        echo "ACR_LOGIN_SERVER=$ACR_LOGIN_SERVER" >> $GITHUB_ENV
        echo "CONTAINER_APPS_ENV_ID=$CONTAINER_APPS_ENV_ID" >> $GITHUB_ENV
        echo "UAMI_ID=$UAMI_ID" >> $GITHUB_ENV

      - name: Layer 2 ‚Äî Build and Push Container Image
        run: |
          export IMAGE_TAG="$(echo "${{ github.sha }}" | cut -c1-7)"

          # Build and push using Azure Container Registry build (no Docker required)
          az acr build \
            --registry ${{ env.ACR_NAME }} \
            --image rossslaney-app:$IMAGE_TAG \
            --image rossslaney-app:latest \
            --file Dockerfile \
            .

          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      - name: Layer 3 ‚Äî Deploy Container App with DNS and SSL
        run: |
          export IMAGE_TAG="$(echo "${{ github.sha }}" | cut -c1-7)"
          export APP_IMAGE="${{ env.ACR_LOGIN_SERVER }}/rossslaney-app:${IMAGE_TAG}"

        # Deploy container app with DNS and SSL configuration
        az deployment group create \
          --debug \
          --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
          --name applications \
          --template-file infra/layers/applications.bicep \
          --parameters location=${{ env.AZURE_LOCATION }} \
          --parameters projectPrefix=${{ env.PROJECT_PREFIX }} \
          --parameters containerAppsEnvId=${{ env.CONTAINER_APPS_ENV_ID }} \
          --parameters acrLoginServer=${{ env.ACR_LOGIN_SERVER }} \
          --parameters containerImage="$APP_IMAGE" \
          --parameters domainName=${{ secrets.AZURE_DNSZONE_DOMAINNAME }} \
          --parameters uamiId=${{ env.UAMI_ID }}

      - name: Deployment Summary
        run: |
          export CONTAINER_APP_FQDN="$(az deployment group show --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --name applications --query properties.outputs.containerAppFqdn.value --output tsv)"

          echo "‚úÖ Deployment completed successfully!"
          echo "üöÄ Application URL: https://${{ secrets.AZURE_DNSZONE_DOMAINNAME }}"
          echo "üåê DNS, SSL certificate, and custom domain fully configured via Bicep"
          echo "üê≥ Container App FQDN: $CONTAINER_APP_FQDN"
          echo "üì¶ ACR: ${{ env.ACR_LOGIN_SERVER }}"
          echo "üóÇÔ∏è Resource Group: ${{ env.AZURE_RESOURCE_GROUP }}"
          echo ""
          echo "üéâ Your app is now live with custom domain and SSL!"
          echo "üîí Azure-managed certificate automatically provisioned"
          echo "üì¶ Complete infrastructure-as-code solution using layered Bicep deployments"
